To properly move the enemies, it is important to know how to turn left, right 
and turn backwards from the current position and moving direction. 

This is implemented by an enumeration of possible directions:

enum DIR {
	none,
	north,
	east,
	south,
	west
}

NOTE: Directions need to be ordered clockwise!

This gives the following values for our current moving direction (stored in a
variable called prev_dir in this example):

0 = none
1 = north
2 = east
3 = south
4 = west

This allows to easily calculate a turn by:

prev_dir + 1 = turn right
prev_dir - 1 = turn left
prev_dir + 2 = turn backwards

But there are some corner cases, where above simple formula fails:

going west (4), turning right (+1) = going north (1), NOT 5 as formula returns
going north (1), turning left (-1) = going west (4) NOT 0 as formula returns

right turns (+1)

prev_dir			new_dir
---------------------------
north	1		2	east
east	2		3	south
south	3		4	west
west	4		1	north

Formula: (prev_dir mod 4) + 1

left turns (-1)

prev_dir			new_dir
---------------------------
north	1		4	west
east	2		1	north
south	3		2	east
west	4		3	south

Formula: ( ( 5 - prev_dir ) div 4 ) * 4 + ( prev_dir - 1 );

backwards turn (+2)

prev_dir			new_dir
---------------------------
north	1		3	south
east	2		4	west
south 	3		1	north
west	4		2	east

Formula: ( prev_dir + 2 ) - ( prev_dir div 3 ) * 4

NOTE: Operations mod and div are Gamemaker functions:
mod = modulo
div = integer division